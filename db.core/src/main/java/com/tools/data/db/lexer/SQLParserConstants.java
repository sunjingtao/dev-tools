/* Generated By:JavaCC: Do not edit this line. SQLParserConstants.java */
package com.tools.data.db.lexer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AS = 5;
  /** RegularExpression Id. */
  int ALL = 6;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int ASC = 8;
  /** RegularExpression Id. */
  int AVG = 9;
  /** RegularExpression Id. */
  int BY = 10;
  /** RegularExpression Id. */
  int COUNT = 11;
  /** RegularExpression Id. */
  int CROSS = 12;
  /** RegularExpression Id. */
  int DESC = 13;
  /** RegularExpression Id. */
  int DISTINCT = 14;
  /** RegularExpression Id. */
  int FROM = 15;
  /** RegularExpression Id. */
  int FULL = 16;
  /** RegularExpression Id. */
  int GROUP = 17;
  /** RegularExpression Id. */
  int HAVING = 18;
  /** RegularExpression Id. */
  int INNER = 19;
  /** RegularExpression Id. */
  int LEFT = 20;
  /** RegularExpression Id. */
  int JOIN = 21;
  /** RegularExpression Id. */
  int MAX = 22;
  /** RegularExpression Id. */
  int MIN = 23;
  /** RegularExpression Id. */
  int NATURAL = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int ON = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int ORDER = 28;
  /** RegularExpression Id. */
  int OUTER = 29;
  /** RegularExpression Id. */
  int RIGHT = 30;
  /** RegularExpression Id. */
  int SELECT = 31;
  /** RegularExpression Id. */
  int SUM = 32;
  /** RegularExpression Id. */
  int WHERE = 33;
  /** RegularExpression Id. */
  int RELOP = 34;
  /** RegularExpression Id. */
  int ORDINARY_ID = 35;
  /** RegularExpression Id. */
  int DELIMITED_ID = 36;
  /** RegularExpression Id. */
  int MYSQL_DELIMITED_ID = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int STRING_LITERAL = 40;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"AS\"",
    "\"ALL\"",
    "\"AND\"",
    "\"ASC\"",
    "\"AVG\"",
    "\"BY\"",
    "\"COUNT\"",
    "\"CROSS\"",
    "\"DESC\"",
    "\"DISTINCT\"",
    "\"FROM\"",
    "\"FULL\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "\"INNER\"",
    "\"LEFT\"",
    "\"JOIN\"",
    "\"MAX\"",
    "\"MIN\"",
    "\"NATURAL\"",
    "\"NOT\"",
    "\"ON\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"OUTER\"",
    "\"RIGHT\"",
    "\"SELECT\"",
    "\"SUM\"",
    "\"WHERE\"",
    "<RELOP>",
    "<ORDINARY_ID>",
    "<DELIMITED_ID>",
    "<MYSQL_DELIMITED_ID>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING_LITERAL>",
    "<INTEGER_LITERAL>",
    "\",\"",
    "\"*\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"?\"",
  };

}
